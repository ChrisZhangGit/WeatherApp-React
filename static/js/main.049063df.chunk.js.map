{"version":3,"sources":["responsive/Device.js","components/SearchCity.js","components/SmallLabel.js","components/ForecastMinutes.js","components/Text.js","components/ForecastHours.js","components/ForecastDays.js","components/MediumLabel.js","components/Alert.js","components/ResultFadeIn.js","components/BigLabel.js","components/Result.js","components/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SearchBar","styled","form","showResult","SearchInput","input","SearchIcon","span","SearchCity","submit","value","change","onSubmit","type","placeholder","onChange","icon","faSearch","SmallLabel","h4","color","weight","fontSize","align","firstToUpperCase","ForecastWrapper","div","ForecastMinutes","props","dt","precipitation","date","Date","toLocaleString","slice","faCloudSunRain","faCloudMoonRain","toString","Text","WeatherIcon","img","ForecastHours","temp","iconUrl","src","ForecastDays","MediumLabel","h3","AlertsWrapper","AlertIsNull","faCheckSquare","AlertContent","address","description","sender","start","end","startTime","endTime","typeConvert","descriptionConvert","senderConvert","addressConvert","addressIndex","indexOf","checkEng","param","test","ResultFadeIn","keyframes","BigLabel","h2","Results","LocationWrapper","CurrentWeatherWrapper","TemperatureWrapper","Temperature","WeatherDetailsWrapper","WeatherDetail","Forecast","AlertsLabel","Result","weatherIcon","weather","city","country","main","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","feelsLikeTemp","pressure","visibility","forecastMinutely","forecastHourly","forecastDaily","alerts","forecastsMinutely","map","item","key","forecastsHourly","Math","round","forecastsDaily","day","weatherList","Clear","faSun","Thunderstorm","faBolt","Drizzle","faCloudRain","Rain","faCloudShowersHeavy","Snow","faSnowflake","Clouds","faCloud","Atmosphere","faSmog","alertInfo","document","body","setAttribute","classList","add","backgroundChange","undefined","uuid","sender_name","event","faBell","faClock","faCalendarAlt","faExclamationTriangle","NotFoundWrapper","NotfoundIcon","NotFoundText","NotFound","faFrown","AppTitle","h1","showLabel","searchTitle","WeatherWrapper","App","state","weatherInfo","error","handleInputChange","e","setState","target","handleSearchCity","preventDefault","localStorage","clear","setItem","getLocation","APIkey","axios","all","get","then","spread","resCurrent","resLocation","currentDate","getDay","getDate","getMonth","data","sys","lat","results","geometry","location","lng","formatted_address","getWeather","resForecast","name","temp_max","temp_min","feels_like","clouds","speed","minutely","hourly","daily","JSON","stringify","catch","this","localWeatherData","parse","getItem","isDataStored","length","Component","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.049063df.chunk.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '525px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nconst device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n\nexport default device;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport device from '../responsive/Device';\n\nconst SearchBar = styled.form`\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\n  position: relative;\n  margin: 0 auto;\n  max-width: 500px;\n  transition: 0.8s 0.5s;\n  @media ${device.laptopL} {\n    max-width: 600px;\n  }\n  @media ${device.desktop} {\n    max-width: 700px;\n  }\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  border: none;\n  background-color: #ffffff;\n  font-size: 16px;\n  padding: 10px 15px 10px 40px;\n  color: #c5c5c5;\n  transition: 0.2s;\n  border-radius: 20px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  &:focus {\n    color: #191919;\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n    outline: none;\n  }\n  @media ${device.tablet} {\n    font-size: 18px;\n  }\n  @media ${device.laptop} {\n    padding: 15px 20px 15px 45px;\n    border-radius: 30px;\n  }\n`;\n\nconst SearchIcon = styled.span`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 22px;\n  transform: translate(-50%, -50%);\n  height: 14px;\n  width: 14px;\n  font-size: 14px;\n  color: #c5c5c5;\n  @media ${device.tablet} {\n    height: 15px;\n    width: 15px;\n    font-size: 15px;\n  }\n  @media ${device.laptop} {\n    height: 16px;\n    width: 16px;\n    font-size: 16px;\n  }\n`;\n\nconst SearchCity = ({ submit, value, change, showResult }) => {\n  return (\n    <>\n      <SearchBar showResult={showResult} onSubmit={submit}>\n        <SearchInput type=\"text\" value={value} placeholder=\"Enter city\" onChange={change} />\n        <SearchIcon>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchIcon>\n      </SearchBar>\n    </>\n  );\n};\n\nSearchCity.propTypes = {\n  submit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  showResult: PropTypes.bool.isRequired,\n};\n\nexport default SearchCity;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst SmallLabel = styled.h4`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '15px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '20px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '23px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '26px'};\n  }\n`;\n\nexport default SmallLabel;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport SmallLabel from './SmallLabel';\nimport device from '../responsive/Device';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudSunRain, faCloudMoonRain } from '@fortawesome/free-solid-svg-icons';\n\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 90px;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.2);\n  &:hover {\n    transition-property: transform;\n    transform: translateY(-10px);\n    transition-duration: 0.2s;\n    transition-timing-function: ease-in-out;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\n\nexport const ForecastMinutes = props => {\n  const { dt, precipitation } = props;\n  const date = new Date(dt * 1000).toLocaleString().slice(12, 17);\n  //   console.log(date.slice(0, 2));\n\n  return (\n    <ForecastWrapper>\n      <SmallLabel fontSize=\"30px\" align=\"center\">\n        <FontAwesomeIcon\n          icon={(date.slice(0, 2) > 6) & (date.slice(0, 2) < 18) ? faCloudSunRain : faCloudMoonRain}\n        />\n      </SmallLabel>\n      <SmallLabel align=\"center\" weight=\"200\">\n        {precipitation.toString().slice(0, 4)}mm\n      </SmallLabel>\n      <SmallLabel fontSize=\"17px\" weight=\"400\" align=\"center\">\n        {date}\n      </SmallLabel>\n    </ForecastWrapper>\n  );\n};\n\nForecastMinutes.propTypes = {\n  precipitation: PropTypes.number.isRequired,\n  dt: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst Text = styled.span`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-size: ${({ fontSize }) => fontSize || '12px'};\n  text-align: ${({ align }) => align || 'left'};\n\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '15px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '17px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '19px'};\n  }\n`;\n\nexport default Text;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\nimport device from '../responsive/Device';\n\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 90px;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.2);\n  &:hover {\n    transition-property: transform;\n    transform: translateY(-10px);\n    transition-duration: 0.2s;\n    transition-timing-function: ease-in-out;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\nconst WeatherIcon = styled.img`\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: 0 auto;\n`;\n\nexport const ForecastHours = props => {\n  const { dt, temp, icon } = props;\n  const date = new Date(dt * 1000).toLocaleString().slice(12, 17);\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n  //console.log(date.slice(0, 2));\n\n  return (\n    <ForecastWrapper>\n      <Text align=\"center\">{date}</Text>\n\n      <WeatherIcon src={iconUrl} />\n      <SmallLabel align=\"center\" weight=\"400\">\n        {temp}&#176;C\n      </SmallLabel>\n    </ForecastWrapper>\n  );\n};\n\nForecastHours.propTypes = {\n  dt: PropTypes.number.isRequired,\n  temp: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\nimport device from '../responsive/Device';\n\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 60px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  justify-content: space-between;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.2);\n  &:hover {\n    transition-property: transform;\n    transform: translateY(-10px);\n    transition-duration: 0.2s;\n    transition-timing-function: ease-in-out;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\nconst WeatherIcon = styled.img`\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: 0 auto;\n`;\n\nexport const ForecastDays = props => {\n  const { dt, temp, icon } = props;\n\n  const date = new Date(dt * 1000).toLocaleString().slice(0, 10);\n  //console.log('dt', date);\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n  //console.log(date.slice(0, 2));\n\n  return (\n    <ForecastWrapper>\n      <Text align=\"center\">{date}</Text>\n\n      <WeatherIcon src={iconUrl} />\n      <SmallLabel align=\"center\" weight=\"400\">\n        {temp}&#176;C\n      </SmallLabel>\n    </ForecastWrapper>\n  );\n};\n\nForecastDays.propTypes = {\n  dt: PropTypes.number.isRequired,\n  temp: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst MediumLabel = styled.h3`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '20px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '23px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '26px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '29px'};\n  }\n`;\n\nexport default MediumLabel;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport SmallLabel from './SmallLabel';\nimport MediumLabel from './MediumLabel';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons';\n\nconst ForecastWrapper = styled.div`\n  padding: 20px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 0, 0, 0.322);\n  transition-property: transform;\n  transition-duration: 0.2s;\n  transition-timing-function: ease-in-out;\n  &:hover {\n    transform: translateY(-10px);\n  }\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst AlertsWrapper = styled.div`\n  width: 100%;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(0, 255, 0, 0.322);\n  transition-property: transform;\n  transition-duration: 0.2s;\n  transition-timing-function: ease-in-out;\n  &:hover {\n    transform: translateY(-10px);\n  }\n`;\n\nexport const AlertIsNull = () => {\n  return (\n    <AlertsWrapper>\n      <MediumLabel align=\"center\">\n        <FontAwesomeIcon icon={faCheckSquare} />\n        &nbsp; There is no weather alert in this area\n      </MediumLabel>\n    </AlertsWrapper>\n  );\n};\n\nexport const AlertContent = props => {\n  const { address, description, sender, start, end, type } = props;\n  const startTime = new Date(start * 1000).toLocaleString();\n  const endTime = new Date(end * 1000).toLocaleString();\n  let typeConvert = type;\n  let descriptionConvert = description;\n  let senderConvert = sender;\n  let addressConvert = address;\n  let addressIndex = addressConvert.indexOf(',');\n  addressConvert = addressConvert.slice(addressIndex + 1);\n\n  const checkEng = param => {\n    const regExp = /[^A-Za-z]/;\n    if (regExp.test(param)) return false;\n    return true;\n  };\n\n  const infoCheck = () => {\n    if (typeConvert === '' || !checkEng(typeConvert)) {\n      typeConvert = 'Natural Disaster';\n    }\n    if (descriptionConvert === '' || !checkEng(descriptionConvert)) {\n      descriptionConvert = 'Unknown Natural Disaster';\n    }\n    if (senderConvert === '' || !checkEng(typeConvert)) {\n      senderConvert = 'Bureau of Meteorology ' + addressConvert;\n    }\n  };\n\n  return (\n    <ForecastWrapper>\n      {infoCheck()}\n      <SmallLabel>{typeConvert}</SmallLabel>\n      <SmallLabel>\n        Start\n        <br />\n        {startTime}\n      </SmallLabel>\n      <SmallLabel>\n        End\n        <br />\n        {endTime}\n      </SmallLabel>\n      <SmallLabel>\n        Sender\n        <br />\n        {senderConvert}\n      </SmallLabel>\n      <SmallLabel>\n        Description\n        <br />\n        {descriptionConvert}\n      </SmallLabel>\n    </ForecastWrapper>\n  );\n};\n\nAlertContent.propTypes = {\n  address: PropTypes.string,\n  description: PropTypes.string,\n  sender: PropTypes.string,\n  start: PropTypes.string,\n  end: PropTypes.string,\n  type: PropTypes.string,\n};\n","import { keyframes } from 'styled-components';\n\nconst ResultFadeIn = keyframes`\n  to {\n    opacity: 1;\n        visibility: visible;\n        top: 0;\n  }\n`;\n\nexport default ResultFadeIn;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst BigLabel = styled.h2`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '30px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  \n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '37px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '43px'};\n  }\n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '52px'};\n  }\n`;\n\nexport default BigLabel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uuid from 'react-uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n  faClock,\n  faBell,\n  faCalendarAlt,\n  faExclamationTriangle,\n} from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport device from '../responsive/Device';\nimport { ForecastMinutes } from './ForecastMinutes';\nimport { ForecastHours } from './ForecastHours';\nimport { ForecastDays } from './ForecastDays';\nimport { AlertIsNull, AlertContent } from './Alert';\nimport ResultFadeIn from './ResultFadeIn';\nimport BigLabel from './BigLabel';\nimport MediumLabel from './MediumLabel';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 1.5s 0.3s forwards;\n`;\n\nconst LocationWrapper = styled.div`\n  flex-basis: 100%;\n  &:hover {\n    transition-property: transform;\n    transform: translateX(20px);\n    transition-duration: 0.3s;\n    transition-timing-function: ease-in-out;\n  }\n`;\n\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  margin: 20px 0;\n  grid-gap: 30px;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n    padding-right: 10px;\n  }\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding-right: 20px;\n  }\n`;\n\nconst WeatherIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 70px;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 100px;\n    justify-content: flex-end;\n  }\n  @media ${device.laptop} {\n    font-size: 120px;\n  }\n  @media ${device.laptopL} {\n    font-size: 140px;\n  }\n`;\n\nconst TemperatureWrapper = styled.div``;\n\nconst Temperature = styled.h3`\n  display: block;\n  font-size: 50px;\n  font-weight: 400;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 70px;\n  }\n  @media ${device.laptop} {\n    font-size: 90px;\n  }\n  @media ${device.laptopL} {\n    font-size: 110px;\n  }\n`;\n\nconst WeatherDetailsWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 0;\n  margin: 20px 0;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  align-self: flex-start;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n  }\n`;\n\nconst WeatherDetail = styled.div`\n  flex-basis: calc(100% / 3);\n  padding: 10px;\n  &:hover {\n    transition-property: transform;\n    transform: translateY(-10px);\n    transition-duration: 0.2s;\n    transition-timing-function: ease-in-out;\n  }\n  @media ${device.laptop} {\n    padding: 20px 10px;\n  }\n`;\n\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\n\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  &::-webkit-scrollbar {\n    overflow-x: hidden;\n    background: rgba(255, 255, 255, 0);\n    border-radius: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: rgba(255, 255, 255, 0.2);\n    border-radius: 10px;\n  }\n  &::-webkit-scrollbar-thumb:active {\n    background: rgba(255, 255, 255, 0.7);\n  }\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nexport const AlertsLabel = styled.h3`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '20px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  @media ${device.mobileS} {\n    font-size: 15px;\n  }\n  @media ${device.mobileM} {\n    font-size: 17px;\n  }\n  @media ${device.tablet} {\n    font-size: 20px;\n  }\n  @media ${device.laptop} {\n    font-size: 25px;\n  }\n  @media ${device.laptopL} {\n    font-size: 30px;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  const {\n    address,\n    city,\n    country,\n    date,\n    description,\n    main,\n    temp,\n    sunset,\n    sunrise,\n    humidity,\n    wind,\n    highestTemp,\n    lowestTemp,\n    feelsLikeTemp,\n    pressure,\n    visibility,\n    //time,\n    forecastMinutely,\n    forecastHourly,\n    forecastDaily,\n    alerts,\n  } = weather;\n\n  const forecastsMinutely = forecastMinutely.map(item => (\n    <ForecastMinutes key={item.dt} dt={item.dt} precipitation={item.precipitation} />\n  ));\n\n  const forecastsHourly = forecastHourly.map(item => (\n    <ForecastHours\n      key={item.dt}\n      dt={item.dt}\n      temp={Math.round(item.temp)}\n      icon={item.weather[0].icon}\n    />\n  ));\n\n  const forecastsDaily = forecastDaily.map(item => (\n    <ForecastDays\n      key={item.dt}\n      dt={item.dt}\n      temp={Math.round(item.temp.day)}\n      icon={item.weather[0].icon}\n    />\n  ));\n\n  let weatherIcon = null;\n\n  const weatherList = {\n    Clear: faSun,\n    Thunderstorm: faBolt,\n    Drizzle: faCloudRain,\n    Rain: faCloudShowersHeavy,\n    Snow: faSnowflake,\n    Clouds: faCloud,\n    Atmosphere: faSmog,\n  };\n\n  weatherIcon = weatherList[main] ? (\n    <FontAwesomeIcon icon={weatherList[main]} />\n  ) : (\n    <FontAwesomeIcon icon={weatherList['Atmosphere']} />\n  );\n\n  const backgroundChange = () => {\n    switch (main) {\n      case 'Clear':\n        document.body.setAttribute('class', '');\n        document.body.classList.add('clear');\n        break;\n      case 'ThunderStorm':\n        document.body.setAttribute('class', '');\n        document.body.classList.add('thunderstorm');\n        break;\n      case 'Drizzle':\n        document.body.setAttribute('class', '');\n        document.body.classList.add('drizzle');\n        break;\n      case 'Rain':\n        document.body.setAttribute('class', '');\n        document.body.classList.add('rain');\n        break;\n      case 'Snow':\n        document.body.setAttribute('class', '');\n        document.body.classList.add('snow');\n        break;\n      case 'Clouds':\n        document.body.setAttribute('class', '');\n        document.body.classList.add('clouds');\n        break;\n      default:\n        document.body.setAttribute('class', '');\n        document.body.classList.add('atmosphere');\n        break;\n    }\n  };\n\n  let alertInfo;\n  const showAlert = () => {\n    alerts !== undefined\n      ? (alertInfo = alerts.map(item => (\n          <AlertContent\n            address={address}\n            key={uuid()}\n            description={item.description}\n            sender={item.sender_name}\n            start={item.start}\n            end={item.end}\n            type={item.event}\n          />\n        )))\n      : (alertInfo = <AlertIsNull />);\n  };\n\n  return (\n    <Results>\n      {backgroundChange()}\n      {showAlert()}\n      <LocationWrapper>\n        <BigLabel>\n          {city}, {country} {/*time*/}\n        </BigLabel>\n        <SmallLabel weight=\"400\">{date}</SmallLabel>\n      </LocationWrapper>\n      <CurrentWeatherWrapper>\n        <WeatherIcon>{weatherIcon}</WeatherIcon>\n        <TemperatureWrapper>\n          <Temperature>{Math.round(temp)}&#176;</Temperature>\n          <SmallLabel weight=\"400\" firstToUpperCase>\n            {description}\n          </SmallLabel>\n        </TemperatureWrapper>\n      </CurrentWeatherWrapper>\n      <WeatherDetailsWrapper>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {Math.round(highestTemp)}&#176;\n          </SmallLabel>\n          <Text align=\"center\">Hight</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {wind}mph\n          </SmallLabel>\n          <Text align=\"center\">Wind</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {sunrise}\n          </SmallLabel>\n          <Text align=\"center\">Sunrise</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {Math.round(lowestTemp)}&#176;\n          </SmallLabel>\n          <Text align=\"center\">Low</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {humidity}%\n          </SmallLabel>\n          <Text align=\"center\">Humidity</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {sunset}\n          </SmallLabel>\n          <Text align=\"center\">Sunset</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {Math.round(feelsLikeTemp)}&#176;\n          </SmallLabel>\n          <Text align=\"center\">Feels Like</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {pressure}hPa\n          </SmallLabel>\n          <Text align=\"center\">Pressure</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {Math.round(visibility) / 1000}km\n          </SmallLabel>\n          <Text align=\"center\">Visibility</Text>\n        </WeatherDetail>\n      </WeatherDetailsWrapper>\n      <ForecastWrapper>\n        <MediumLabel weight=\"600\">\n          <FontAwesomeIcon icon={faBell} /> Minutely Forecast (Precipitation)\n        </MediumLabel>\n        <Forecast>{forecastsMinutely}</Forecast>\n      </ForecastWrapper>\n      <ForecastWrapper>\n        <MediumLabel weight=\"600\">\n          <FontAwesomeIcon icon={faClock} /> Hourly Forecast\n        </MediumLabel>\n        <Forecast>{forecastsHourly}</Forecast>\n      </ForecastWrapper>\n      <ForecastWrapper>\n        <MediumLabel weight=\"600\">\n          <FontAwesomeIcon icon={faCalendarAlt} /> Daily Forecast\n        </MediumLabel>\n        <Forecast>{forecastsDaily}</Forecast>\n      </ForecastWrapper>\n      <ForecastWrapper>\n        <AlertsLabel>\n          <FontAwesomeIcon icon={faExclamationTriangle} />\n          &nbsp;&nbsp;Alerts\n        </AlertsLabel>\n        <Forecast>{alertInfo}</Forecast>\n      </ForecastWrapper>\n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    icon: PropTypes.string,\n    sunrise: PropTypes.string,\n    sunset: PropTypes.string,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    highestTemp: PropTypes.number,\n    lowestTemp: PropTypes.number,\n    feelsLikeTemp: PropTypes.number,\n    pressure: PropTypes.number,\n    visibility: PropTypes.number,\n    forecast: PropTypes.array,\n    time: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Result;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport ResultFadeIn from './ResultFadeIn';\n\nconst NotFoundWrapper = styled.div`\n  max-width: 600px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 100px auto 0;\n  padding: 20px;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  border-radius: 10px;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.3);\n  border-radius: 10px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst NotfoundIcon = styled.span`\n  display: block;\n  text-align: center;\n  color: #ffffff;\n  font-size: 40px;\n  margin-right: 10px;\n`;\n\nconst NotFoundText = styled.span`\n  color: #ffffff;\n  font-size: 17px;\n`;\n\nconst NotFound = () => {\n  return (\n    <NotFoundWrapper>\n      <NotfoundIcon>\n        <FontAwesomeIcon icon={faFrown} />\n      </NotfoundIcon>\n      <NotFoundText>Sorry, this specified city was not found...</NotFoundText>\n    </NotFoundWrapper>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport SearchCity from './SearchCity';\nimport device from '../responsive/Device';\nimport Result from './Result';\nimport NotFound from './NotFound';\n\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.4s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n  ${({ searchTitle }) =>\n    searchTitle &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n\n    &:hover {\n      transform: scale(1.1);\n    }\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\nclass App extends Component {\n  state = {\n    // isDataStored: false,\n    value: '',\n    weatherInfo: null,\n    error: false,\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  handleSearchCity = e => {\n    e.preventDefault();\n    localStorage.clear();\n    const { value } = this.state;\n    localStorage.setItem('value', value);\n\n    // Geocoding API: Convert between addresses and geographic coordinates\n    const geocodingAPIkey = 'AIzaSyCEykiqcs_JYhTw8pIBL5BGAwfdVWuLD6Y';\n    const getLocation = `https://maps.googleapis.com/maps/api/geocode/json?address=${value}&key=${geocodingAPIkey}`;\n\n    const APIkey = 'fff52b3fc3996aa9a6cd2f21aeea9a58';\n    // const APIkey = '638d3030eafa245040554df387be8a9c';\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n    // const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n\n    axios\n      .all([axios.get(weather), axios.get(getLocation)])\n      .then(\n        axios.spread((resCurrent, resLocation) => {\n          // console.log('resCurrent', resCurrent);\n          // console.log('resLocation', resLocation);\n          const months = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n          ];\n          const days = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n          ];\n          const currentDate = new Date();\n          const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n            months[currentDate.getMonth()]\n          }`;\n          const sunset = new Date(resCurrent.data.sys.sunset * 1000).toLocaleString().slice(12, 17);\n          const sunrise = new Date(resCurrent.data.sys.sunrise * 1000)\n            .toLocaleString()\n            .slice(12, 17);\n\n          const lat = resLocation.data.results[0].geometry.location.lat;\n          const lng = resLocation.data.results[0].geometry.location.lng;\n          const address = resLocation.data.results[0].formatted_address;\n          // console.log('lat', lat);\n          // console.log('lng', lng);\n\n          const getWeather = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${APIkey}&units=metric`;\n          axios.get(getWeather).then(resForecast => {\n            // console.log('resForecast', resForecast);\n            const weatherInfo = {\n              address,\n              city: resCurrent.data.name,\n              country: resCurrent.data.sys.country,\n              date,\n              description: resCurrent.data.weather[0].description,\n              main: resCurrent.data.weather[0].main,\n              icon: resCurrent.data.weather[0].icon,\n              temp: resCurrent.data.main.temp,\n              highestTemp: resCurrent.data.main.temp_max,\n              lowestTemp: resCurrent.data.main.temp_min,\n              feelsLikeTemp: resCurrent.data.main.feels_like,\n              sunrise,\n              sunset,\n              clouds: resCurrent.data.clouds.all,\n              humidity: resCurrent.data.main.humidity,\n              wind: resCurrent.data.wind.speed,\n              pressure: resCurrent.data.main.pressure,\n              visibility: resCurrent.data.visibility,\n              // forecast: res3.data.list,\n              forecastMinutely: resForecast.data.minutely,\n              forecastHourly: resForecast.data.hourly,\n              forecastDaily: resForecast.data.daily,\n              alerts: resForecast.data.alerts,\n              //time,\n            };\n            // console.log('???', weatherInfo);\n            //console.log('weather', resForecast);\n            localStorage.setItem('localWeatherData', JSON.stringify(weatherInfo));\n            localStorage.setItem('isDataStored', true);\n\n            this.setState({\n              weatherInfo,\n              error: false,\n              // isDataStored: true,\n            });\n          });\n          //console.log('resForecast', lat);\n          // const googleGeoData = JSON.stringify(resForecast.data);\n          // console.log(googleGeoData.geometry.location);\n          // console.log('resForecast:' + resForecast.result);\n          //const time = currentDate.toString().slice(16, 24);\n\n          // console.log(weatherInfo);\n          // console.log(weatherInfo.main);\n        }),\n      )\n      .catch(error => {\n        this.setState({\n          error: true,\n          weatherInfo: null,\n        });\n      });\n  };\n\n  render() {\n    const { value, weatherInfo, error } = this.state;\n    // const localWeatherData = localStorage.getItem('localWeatherData');\n    const localWeatherData = JSON.parse(localStorage.getItem('localWeatherData') || '[]');\n    // console.log(localWeatherData);\n    // console.log(typeof localWeatherData);\n    // console.log(localWeatherData.length);\n    const isDataStored = localStorage.getItem('isDataStored');\n    // console.log('1 :' + weatherInfo);\n    // console.log(`2 :${localWeatherData.getLocation}`);\n    // console.log('3 :' + isDataStored);\n    return (\n      <>\n        {/* <AppTitle showLabel={(weatherInfo || error) && true}>Weather appp</AppTitle> */}\n        {/* <AppTitle showLabel={weatherInfo || error || isDataStored} onClick={localStorage.clear()}> */}\n        <AppTitle showLabel={weatherInfo || error || isDataStored}>Weather app</AppTitle>\n\n        <WeatherWrapper>\n          {!isDataStored && (\n            <AppTitle searchTitle showResult={weatherInfo || error}>\n              Weather App\n            </AppTitle>\n          )}\n          {\n            <SearchCity\n              value={value}\n              showResult={error || localWeatherData.length !== 0}\n              change={this.handleInputChange}\n              submit={this.handleSearchCity}\n            />\n          }\n          {(weatherInfo || isDataStored) && <Result weather={weatherInfo || localWeatherData} />}\n          {error && <NotFound error={error} />}\n        </WeatherWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('weather-app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}